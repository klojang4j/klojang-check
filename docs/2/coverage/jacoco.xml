<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Klojang Check"><sessioninfo id="ayco-Latitude-5430-d1712b89" start="1674640274087" dump="1674640274699"/><package name="org/klojang/check"><class name="org/klojang/check/CommonExceptions" sourcefilename="CommonExceptions.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="illegalState" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="illegalState" desc="()Ljava/util/function/Supplier;" line="130"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="illegalArgument" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="illegalArgument" desc="()Ljava/util/function/Supplier;" line="150"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOutOfBounds" desc="(I)Ljava/util/function/Supplier;" line="161"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOutOfBounds" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="172"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ioException" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="182"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ioException" desc="()Ljava/util/function/Supplier;" line="192"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileNotFound" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="202"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileNotFound" desc="(Ljava/io/File;)Ljava/util/function/Supplier;" line="212"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="npe" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="222"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="npe" desc="()Ljava/util/function/Supplier;" line="232"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noSuchElement" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="242"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noSuchElement" desc="()Ljava/util/function/Supplier;" line="252"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="duplicateKey" desc="()Ljava/util/function/Supplier;" line="261"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="duplicateKey" desc="(Ljava/lang/Object;)Ljava/util/function/Supplier;" line="271"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="duplicateElement" desc="(Ljava/lang/Object;)Ljava/util/function/Supplier;" line="281"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="duplicateElement" desc="()Ljava/util/function/Supplier;" line="290"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="duplicateValue" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="300"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$duplicateValue$13" desc="(Ljava/lang/String;)Lorg/klojang/check/aux/DuplicateValueException;" line="300"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$duplicateElement$12" desc="()Lorg/klojang/check/aux/DuplicateValueException;" line="290"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$duplicateElement$11" desc="(Ljava/lang/Object;)Lorg/klojang/check/aux/DuplicateValueException;" line="281"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$duplicateKey$10" desc="(Ljava/lang/Object;)Lorg/klojang/check/aux/DuplicateValueException;" line="271"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$duplicateKey$9" desc="()Lorg/klojang/check/aux/DuplicateValueException;" line="261"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$noSuchElement$8" desc="(Ljava/lang/String;)Ljava/util/NoSuchElementException;" line="242"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$npe$7" desc="(Ljava/lang/String;)Ljava/lang/NullPointerException;" line="222"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fileNotFound$6" desc="(Ljava/io/File;)Ljava/io/FileNotFoundException;" line="212"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fileNotFound$5" desc="(Ljava/lang/String;)Ljava/io/FileNotFoundException;" line="202"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$ioException$4" desc="(Ljava/lang/String;)Ljava/io/IOException;" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$indexOutOfBounds$3" desc="(Ljava/lang/String;)Ljava/lang/IndexOutOfBoundsException;" line="172"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$indexOutOfBounds$2" desc="(I)Ljava/lang/IndexOutOfBoundsException;" line="161"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$illegalArgument$1" desc="(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$illegalState$0" desc="(Ljava/lang/String;)Ljava/lang/IllegalStateException;" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="119"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="7" covered="28"/><counter type="METHOD" missed="7" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/Check" sourcefilename="Check.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argumentMustNotBeNull" desc="()Ljava/lang/NullPointerException;" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argumentMustNotBeNull" desc="(Ljava/lang/String;)Ljava/lang/NullPointerException;" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="that" desc="(I)Lorg/klojang/check/IntCheck;" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="that" desc="(Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="that" desc="(ILjava/lang/String;)Lorg/klojang/check/IntCheck;" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="that" desc="(Ljava/lang/Object;Ljava/lang/String;)Lorg/klojang/check/ObjectCheck;" line="92"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNull" desc="(Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="111"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNull" desc="(Ljava/lang/Object;Ljava/lang/String;)Lorg/klojang/check/ObjectCheck;" line="136"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Ljava/util/function/Function;I)Lorg/klojang/check/IntCheck;" line="158"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Ljava/util/function/Function;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="179"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Ljava/util/function/Function;ILjava/lang/String;)Lorg/klojang/check/IntCheck;" line="200"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/String;)Lorg/klojang/check/ObjectCheck;" line="221"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetLength" desc="([BII)V" line="246"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetLength" desc="(III)V" line="273"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTo" desc="(Ljava/util/List;II)I" line="301"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTo" desc="([Ljava/lang/Object;II)I" line="335"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTo" desc="(Ljava/lang/String;II)I" line="367"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTo" desc="(III)I" line="400"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fail" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;" line="424"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fail" desc="(Ljava/util/function/Supplier;)Ljava/lang/Object;" line="440"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fail" desc="(Ljava/util/function/Function;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;" line="466"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="244"/><counter type="BRANCH" missed="3" covered="45"/><counter type="LINE" missed="3" covered="49"/><counter type="COMPLEXITY" missed="5" covered="42"/><counter type="METHOD" missed="2" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/CommonChecks" sourcefilename="CommonChecks.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NULL" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNull" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yes" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="no" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="99"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="131"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyString" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="143"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEmpty" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="157"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deepNotNull" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="173"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deepNotEmpty" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="207"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blank" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="220"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plainInt" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="230"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plainShort" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="241"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="array" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="258"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regularFile" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="269"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="directory" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="278"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symlink" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="287"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileExists" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="304"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readable" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="314"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writable" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="324"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="present" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="337"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="available" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="350"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="even" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="363"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="odd" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="372"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positive" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="381"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negative" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="390"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zero" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="399"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="()Lorg/klojang/check/relation/IntRelation;" line="412"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ne" desc="()Lorg/klojang/check/relation/IntRelation;" line="421"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gt" desc="()Lorg/klojang/check/relation/IntRelation;" line="430"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gte" desc="()Lorg/klojang/check/relation/IntRelation;" line="440"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lt" desc="()Lorg/klojang/check/relation/IntRelation;" line="449"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lte" desc="()Lorg/klojang/check/relation/IntRelation;" line="459"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multipleOf" desc="()Lorg/klojang/check/relation/IntRelation;" line="468"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EQ" desc="()Lorg/klojang/check/relation/Relation;" line="488"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalTo" desc="()Lorg/klojang/check/relation/Relation;" line="501"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GT" desc="()Lorg/klojang/check/relation/Relation;" line="512"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LT" desc="()Lorg/klojang/check/relation/Relation;" line="524"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GTE" desc="()Lorg/klojang/check/relation/Relation;" line="536"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LTE" desc="()Lorg/klojang/check/relation/Relation;" line="548"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sameAs" desc="()Lorg/klojang/check/relation/Relation;" line="561"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullOr" desc="()Lorg/klojang/check/relation/Relation;" line="575"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instanceOf" desc="()Lorg/klojang/check/relation/Relation;" line="586"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supertypeOf" desc="()Lorg/klojang/check/relation/Relation;" line="599"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtypeOf" desc="()Lorg/klojang/check/relation/Relation;" line="611"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="()Lorg/klojang/check/relation/Relation;" line="623"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="()Lorg/klojang/check/relation/Relation;" line="635"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValue" desc="()Lorg/klojang/check/relation/Relation;" line="647"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="in" desc="()Lorg/klojang/check/relation/Relation;" line="658"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementOf" desc="()Lorg/klojang/check/relation/Relation;" line="670"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keyIn" desc="()Lorg/klojang/check/relation/Relation;" line="681"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueIn" desc="()Lorg/klojang/check/relation/Relation;" line="692"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inArray" desc="()Lorg/klojang/check/relation/Relation;" line="704"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="()Lorg/klojang/check/relation/Relation;" line="724"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containedIn" desc="()Lorg/klojang/check/relation/Relation;" line="743"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSubstring" desc="()Lorg/klojang/check/relation/Relation;" line="753"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substringOf" desc="()Lorg/klojang/check/relation/Relation;" line="762"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="()Lorg/klojang/check/relation/Relation;" line="772"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="()Lorg/klojang/check/relation/Relation;" line="782"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPattern" desc="()Lorg/klojang/check/relation/Relation;" line="793"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsPattern" desc="()Lorg/klojang/check/relation/Relation;" line="804"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="()Lorg/klojang/check/relation/Relation;" line="821"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsMatch" desc="()Lorg/klojang/check/relation/Relation;" line="839"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numerical" desc="()Lorg/klojang/check/relation/Relation;" line="862"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsableAs" desc="()Lorg/klojang/check/relation/Relation;" line="895"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsIC" desc="()Lorg/klojang/check/relation/Relation;" line="911"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWithIC" desc="()Lorg/klojang/check/relation/Relation;" line="920"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWithIC" desc="()Lorg/klojang/check/relation/Relation;" line="929"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSubstringIC" desc="()Lorg/klojang/check/relation/Relation;" line="939"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="()Lorg/klojang/check/relation/IntObjRelation;" line="959"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexExclusiveOf" desc="()Lorg/klojang/check/relation/IntObjRelation;" line="977"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexInclusiveOf" desc="()Lorg/klojang/check/relation/IntObjRelation;" line="997"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inIntArray" desc="()Lorg/klojang/check/relation/IntObjRelation;" line="1006"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$inIntArray$42" desc="(I[I)Z" line="1007"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$hasSubstringIC$41" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="940"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$endsWithIC$40" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="930"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$startsWithIC$39" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="920"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parsableAs$38" desc="(Ljava/lang/String;Ljava/lang/Class;)Z" line="896"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$numerical$37" desc="(Ljava/lang/String;Ljava/lang/Class;)Z" line="863"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsMatch$36" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="840"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$matches$35" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="822"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsPattern$34" desc="(Ljava/lang/String;Ljava/util/regex/Pattern;)Z" line="804"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$hasPattern$33" desc="(Ljava/lang/String;Ljava/util/regex/Pattern;)Z" line="793"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$substringOf$32" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="762"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containedIn$31" desc="(Ljava/util/Collection;Ljava/util/Collection;)Z" line="743"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$valueIn$30" desc="(Ljava/lang/Object;Ljava/util/Map;)Z" line="692"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keyIn$29" desc="(Ljava/lang/Object;Ljava/util/Map;)Z" line="681"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$in$28" desc="(Ljava/lang/Object;Ljava/util/Collection;)Z" line="658"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtypeOf$27" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="611"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$instanceOf$26" desc="(Ljava/lang/Object;Ljava/lang/Class;)Z" line="586"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nullOr$25" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="575"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sameAs$24" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="561"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$LTE$23" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="548"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$GTE$22" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="536"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$LT$21" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="524"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$GT$20" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="512"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multipleOf$19" desc="(II)Z" line="468"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$lte$18" desc="(II)Z" line="459"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$lt$17" desc="(II)Z" line="449"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$gte$16" desc="(II)Z" line="440"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$gt$15" desc="(II)Z" line="430"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$ne$14" desc="(II)Z" line="421"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$eq$13" desc="(II)Z" line="412"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$zero$12" desc="(I)Z" line="399"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$negative$11" desc="(I)Z" line="390"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$positive$10" desc="(I)Z" line="381"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$odd$9" desc="(I)Z" line="372"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$even$8" desc="(I)Z" line="363"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$symlink$7" desc="(Ljava/io/File;)Z" line="287"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$directory$6" desc="(Ljava/io/File;)Z" line="278"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$regularFile$5" desc="(Ljava/io/File;)Z" line="269"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$array$4" desc="(Ljava/lang/Object;)Z" line="258"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$blank$3" desc="(Ljava/lang/String;)Z" line="220"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emptyString$2" desc="(Ljava/lang/String;)Z" line="143"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$no$1" desc="(Ljava/lang/Boolean;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$yes$0" desc="(Ljava/lang/Boolean;)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="459"/><counter type="BRANCH" missed="1" covered="57"/><counter type="LINE" missed="4" covered="88"/><counter type="COMPLEXITY" missed="3" covered="142"/><counter type="METHOD" missed="2" covered="114"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/CorruptCheckException" sourcefilename="CorruptCheckException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/IntCheck" sourcefilename="IntCheck.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/util/function/Function;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ok" desc="()I" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ok" desc="(Lorg/klojang/check/fallible/FallibleIntUnaryOperator;)I" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapToObj" desc="(Lorg/klojang/check/fallible/FallibleIntFunction;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="(Lorg/klojang/check/fallible/FallibleIntConsumer;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="121"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="143"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="168"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="197"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="225"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="247"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="262"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="285"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="313"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="344"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="375"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="398"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="414"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="438"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="468"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="500"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="534"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="557"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="580"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="600"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="621"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="643"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="665"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="687"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="707"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="727"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="755"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="780"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="807"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="833"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="862"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="891"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="919"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="943"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="968"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="986"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="1008"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="1031"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="1054"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="1077"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="1097"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="1117"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="1137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="1157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="1181"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="1205"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="1231"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="1257"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="1286"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="1311"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(I)Lorg/klojang/check/IntCheck;" line="1332"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(ILjava/lang/String;)Lorg/klojang/check/IntCheck;" line="1344"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1356"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Object;Ljava/lang/String;)Lorg/klojang/check/ObjectCheck;" line="1369"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FQN" desc="(Ljava/lang/String;)Ljava/lang/String;" line="1374"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="760"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="136"/><counter type="COMPLEXITY" missed="0" covered="82"/><counter type="METHOD" missed="0" covered="60"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/ObjectCheck" sourcefilename="ObjectCheck.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ok" desc="()Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ok" desc="(Lorg/klojang/check/fallible/FallibleFunction;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="(Lorg/klojang/check/fallible/FallibleConsumer;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="97"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="125"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="156"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="187"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="214"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="234"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="251"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="276"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="307"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="337"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="366"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="388"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="409"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="430"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="456"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="480"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="503"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="526"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="548"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="570"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="596"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="622"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="647"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="674"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="704"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="738"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="768"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="794"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="817"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="837"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="859"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="882"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="906"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="930"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="952"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="974"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1007"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1040"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1075"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1147"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1188"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="1219"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="1254"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="1288"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="1320"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="1356"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="1390"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1426"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1466"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="1505"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="1540"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(I)Lorg/klojang/check/IntCheck;" line="1554"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(ILjava/lang/String;)Lorg/klojang/check/IntCheck;" line="1566"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="1579"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Object;Ljava/lang/String;)Lorg/klojang/check/ObjectCheck;" line="1593"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FQN" desc="(Ljava/lang/String;)Ljava/lang/String;" line="1597"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="643"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="3" covered="108"/><counter type="COMPLEXITY" missed="3" covered="73"/><counter type="METHOD" missed="1" covered="60"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/ObjectCheckHelper2" sourcefilename="ObjectCheckHelper2.java"><method name="help" desc="(Lorg/klojang/check/ObjectCheck;)Lorg/klojang/check/ObjectCheckHelper2;" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/check/ObjectCheck;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="33"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="48"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="64"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/ObjectCheck;" line="85"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="109"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="121"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="132"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="142"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="160"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="179"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="203"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="228"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="248"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="265"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="274"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="290"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="308"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/ObjectCheck;" line="331"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="353"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="370"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/ToIntFunction;Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="387"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="837"/><counter type="BRANCH" missed="1" covered="65"/><counter type="LINE" missed="1" covered="181"/><counter type="COMPLEXITY" missed="1" covered="55"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/Tag" sourcefilename="Tag.java"><method name="&lt;init&gt;" desc="()V" line="155"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/klojang/check/IntCheckHelper1" sourcefilename="IntCheckHelper1.java"><method name="help" desc="(Lorg/klojang/check/IntCheck;)Lorg/klojang/check/IntCheckHelper1;" line="19"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/check/IntCheck;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="29"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="44"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="59"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/IntCheck;" line="74"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="92"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="112"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="129"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="142"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="158"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="176"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="193"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="212"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="233"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntFunction;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="251"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="538"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="114"/><counter type="COMPLEXITY" missed="0" covered="38"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/ObjectCheckHelper1" sourcefilename="ObjectCheckHelper1.java"><method name="help" desc="(Lorg/klojang/check/ObjectCheck;)Lorg/klojang/check/ObjectCheckHelper1;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/check/ObjectCheck;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="33"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="54"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="74"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;)Lorg/klojang/check/ObjectCheck;" line="89"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="108"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="127"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="143"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="153"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="170"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="189"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Ljava/lang/String;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="207"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="223"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/ObjectCheck;" line="240"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/Function;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/klojang/check/ObjectCheck;" line="256"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="534"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="110"/><counter type="COMPLEXITY" missed="0" covered="38"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/CommonProperties" sourcefilename="CommonProperties.java"><method name="box" desc="()Ljava/util/function/IntFunction;" line="84"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unbox" desc="()Ljava/util/function/ToIntFunction;" line="99"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strval" desc="()Ljava/util/function/Function;" line="115"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strlen" desc="()Ljava/util/function/ToIntFunction;" line="130"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toUpperCase" desc="()Ljava/util/function/Function;" line="144"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLowerCase" desc="()Ljava/util/function/Function;" line="158"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/util/function/Function;" line="173"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constants" desc="()Ljava/util/function/Function;" line="188"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/util/function/Function;" line="204"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ordinal" desc="()Ljava/util/function/ToIntFunction;" line="219"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()Ljava/util/function/ToIntFunction;" line="233"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()Ljava/util/function/ToIntFunction;" line="248"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listSize" desc="()Ljava/util/function/ToIntFunction;" line="262"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSize" desc="()Ljava/util/function/ToIntFunction;" line="276"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapSize" desc="()Ljava/util/function/ToIntFunction;" line="290"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keySet" desc="()Ljava/util/function/Function;" line="307"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()Ljava/util/function/Function;" line="325"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/util/function/Function;" line="341"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/util/function/Function;" line="357"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="()Ljava/util/function/IntUnaryOperator;" line="371"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ABS" desc="()Ljava/util/function/Function;" line="402"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatProperty" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;" line="423"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatProperty" desc="(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;" line="435"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="base" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="449"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNull" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="453"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$27" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="412"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$ABS$26" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="403"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$25" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="388"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$24" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="387"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$23" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="386"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$22" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="385"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$21" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="384"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$20" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="383"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$19" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="382"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$18" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="381"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$17" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="376"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$16" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="361"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$15" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="345"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$14" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="329"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$13" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="312"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$12" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="252"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$11" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="237"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$10" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="223"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$9" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$8" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$constants$7" desc="(Ljava/lang/Class;)[Ljava/lang/Enum;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$6" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="177"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="436"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="76"/><counter type="COMPLEXITY" missed="0" covered="66"/><counter type="METHOD" missed="0" covered="54"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/IntCheckHelper2" sourcefilename="IntCheckHelper2.java"><method name="help" desc="(Lorg/klojang/check/IntCheck;)Lorg/klojang/check/IntCheckHelper2;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/check/IntCheck;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="32"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="50"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="68"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Ljava/util/function/IntPredicate;)Lorg/klojang/check/IntCheck;" line="89"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="112"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="132"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="151"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="159"><counter type="INSTRUCTION" missed="15" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="177"><counter type="INSTRUCTION" missed="15" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="196"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Ljava/lang/String;Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/IntCheck;" line="217"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="242"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notHas" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;ILjava/lang/String;[Ljava/lang/Object;)Lorg/klojang/check/IntCheck;" line="263"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/util/function/IntUnaryOperator;Lorg/klojang/check/relation/IntRelation;ILjava/util/function/Supplier;)Lorg/klojang/check/IntCheck;" line="280"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="534"/><counter type="BRANCH" missed="3" covered="41"/><counter type="LINE" missed="5" covered="123"/><counter type="COMPLEXITY" missed="3" covered="35"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ObjectCheckHelper2.java"><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="2"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="2"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="2"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="11" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="0" ci="10" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="2"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="2"/><line nr="168" mi="0" ci="10" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="2"/><line nr="186" mi="0" ci="12" mb="0" cb="0"/><line nr="188" mi="0" ci="10" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="2"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="2"/><line nr="210" mi="0" ci="12" mb="0" cb="0"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="2"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="12" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="2"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="12" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="1" cb="1"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="2"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="2"/><line nr="282" mi="0" ci="11" mb="0" cb="0"/><line nr="284" mi="0" ci="10" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="2"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="8" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="2"/><line nr="298" mi="0" ci="11" mb="0" cb="0"/><line nr="300" mi="0" ci="10" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="2"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="2"/><line nr="315" mi="0" ci="13" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="2"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="2"/><line nr="338" mi="0" ci="13" mb="0" cb="0"/><line nr="340" mi="0" ci="10" mb="0" cb="0"/><line nr="341" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="2"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="12" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="2"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="12" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="8" mb="0" cb="2"/><line nr="389" mi="0" ci="2" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="837"/><counter type="BRANCH" missed="1" covered="65"/><counter type="LINE" missed="1" covered="181"/><counter type="COMPLEXITY" missed="1" covered="55"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommonExceptions.java"><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="222" mi="0" ci="8" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="8" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="9" mb="0" cb="0"/><line nr="281" mi="0" ci="9" mb="0" cb="0"/><line nr="290" mi="7" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="119"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="7" covered="28"/><counter type="METHOD" missed="7" covered="28"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CorruptCheckException.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommonProperties.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="10" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="10" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="10" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="8" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="10" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="10" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="10" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="380" mi="0" ci="18" mb="0" cb="0"/><line nr="381" mi="0" ci="10" mb="0" cb="2"/><line nr="382" mi="0" ci="12" mb="0" cb="2"/><line nr="383" mi="0" ci="12" mb="0" cb="2"/><line nr="384" mi="0" ci="12" mb="0" cb="2"/><line nr="385" mi="0" ci="11" mb="0" cb="2"/><line nr="386" mi="0" ci="11" mb="0" cb="2"/><line nr="387" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="2"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="10" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="2"/><line nr="425" mi="0" ci="7" mb="0" cb="2"/><line nr="426" mi="0" ci="7" mb="0" cb="0"/><line nr="428" mi="0" ci="6" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="2"/><line nr="437" mi="0" ci="7" mb="0" cb="2"/><line nr="438" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="7" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="6" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="436"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="76"/><counter type="COMPLEXITY" missed="0" covered="66"/><counter type="METHOD" missed="0" covered="54"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tag.java"><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntCheck.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="2"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="11" mb="0" cb="0"/><line nr="128" mi="0" ci="12" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="148" mi="0" ci="11" mb="0" cb="0"/><line nr="150" mi="0" ci="12" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="12" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="2"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="12" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="2"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="2"/><line nr="267" mi="0" ci="13" mb="0" cb="0"/><line nr="269" mi="0" ci="12" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="2"/><line nr="290" mi="0" ci="13" mb="0" cb="0"/><line nr="292" mi="0" ci="12" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="2"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="12" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="2"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="12" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="7" mb="0" cb="0"/><line nr="414" mi="0" ci="6" mb="0" cb="2"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="2"/><line nr="419" mi="0" ci="12" mb="0" cb="0"/><line nr="421" mi="0" ci="12" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="6" mb="0" cb="2"/><line nr="439" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="2"/><line nr="443" mi="0" ci="12" mb="0" cb="0"/><line nr="445" mi="0" ci="12" mb="0" cb="0"/><line nr="446" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="6" mb="0" cb="2"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="471" mi="0" ci="12" mb="0" cb="0"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="6" mb="0" cb="2"/><line nr="501" mi="0" ci="2" mb="0" cb="0"/><line nr="503" mi="0" ci="12" mb="0" cb="0"/><line nr="504" mi="0" ci="1" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="6" mb="0" cb="2"/><line nr="535" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="4" mb="0" cb="0"/><line nr="557" mi="0" ci="7" mb="0" cb="0"/><line nr="580" mi="0" ci="6" mb="0" cb="0"/><line nr="600" mi="0" ci="6" mb="0" cb="0"/><line nr="621" mi="0" ci="7" mb="0" cb="0"/><line nr="643" mi="0" ci="7" mb="0" cb="0"/><line nr="665" mi="0" ci="8" mb="0" cb="0"/><line nr="687" mi="0" ci="8" mb="0" cb="0"/><line nr="707" mi="0" ci="7" mb="0" cb="0"/><line nr="727" mi="0" ci="8" mb="0" cb="0"/><line nr="755" mi="0" ci="7" mb="0" cb="0"/><line nr="780" mi="0" ci="7" mb="0" cb="0"/><line nr="807" mi="0" ci="8" mb="0" cb="0"/><line nr="833" mi="0" ci="8" mb="0" cb="0"/><line nr="862" mi="0" ci="9" mb="0" cb="0"/><line nr="891" mi="0" ci="9" mb="0" cb="0"/><line nr="919" mi="0" ci="8" mb="0" cb="0"/><line nr="943" mi="0" ci="6" mb="0" cb="0"/><line nr="944" mi="0" ci="3" mb="0" cb="0"/><line nr="968" mi="0" ci="6" mb="0" cb="0"/><line nr="986" mi="0" ci="6" mb="0" cb="0"/><line nr="1008" mi="0" ci="7" mb="0" cb="0"/><line nr="1031" mi="0" ci="7" mb="0" cb="0"/><line nr="1054" mi="0" ci="8" mb="0" cb="0"/><line nr="1077" mi="0" ci="8" mb="0" cb="0"/><line nr="1097" mi="0" ci="7" mb="0" cb="0"/><line nr="1117" mi="0" ci="8" mb="0" cb="0"/><line nr="1137" mi="0" ci="7" mb="0" cb="0"/><line nr="1157" mi="0" ci="7" mb="0" cb="0"/><line nr="1181" mi="0" ci="8" mb="0" cb="0"/><line nr="1205" mi="0" ci="8" mb="0" cb="0"/><line nr="1231" mi="0" ci="9" mb="0" cb="0"/><line nr="1257" mi="0" ci="9" mb="0" cb="0"/><line nr="1286" mi="0" ci="8" mb="0" cb="0"/><line nr="1311" mi="0" ci="8" mb="0" cb="0"/><line nr="1332" mi="0" ci="8" mb="0" cb="0"/><line nr="1344" mi="0" ci="8" mb="0" cb="0"/><line nr="1356" mi="0" ci="8" mb="0" cb="0"/><line nr="1369" mi="0" ci="8" mb="0" cb="0"/><line nr="1374" mi="0" ci="3" mb="0" cb="2"/><line nr="1375" mi="0" ci="2" mb="0" cb="0"/><line nr="1377" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="760"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="136"/><counter type="COMPLEXITY" missed="0" covered="82"/><counter type="METHOD" missed="0" covered="60"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommonChecks.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="4"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="11" mb="0" cb="4"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="2"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="10" mb="0" cb="2"/><line nr="372" mi="0" ci="11" mb="0" cb="2"/><line nr="381" mi="0" ci="8" mb="0" cb="2"/><line nr="390" mi="0" ci="8" mb="0" cb="2"/><line nr="399" mi="0" ci="8" mb="0" cb="2"/><line nr="412" mi="0" ci="9" mb="0" cb="2"/><line nr="421" mi="0" ci="9" mb="0" cb="2"/><line nr="430" mi="0" ci="9" mb="0" cb="2"/><line nr="440" mi="0" ci="9" mb="0" cb="2"/><line nr="449" mi="0" ci="9" mb="0" cb="2"/><line nr="459" mi="0" ci="9" mb="0" cb="2"/><line nr="468" mi="0" ci="10" mb="0" cb="2"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="501" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="10" mb="0" cb="2"/><line nr="524" mi="0" ci="10" mb="0" cb="2"/><line nr="536" mi="0" ci="10" mb="0" cb="2"/><line nr="548" mi="0" ci="10" mb="0" cb="2"/><line nr="561" mi="0" ci="9" mb="0" cb="2"/><line nr="575" mi="0" ci="12" mb="0" cb="4"/><line nr="586" mi="0" ci="6" mb="0" cb="0"/><line nr="599" mi="0" ci="2" mb="0" cb="0"/><line nr="611" mi="0" ci="6" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="0"/><line nr="635" mi="0" ci="2" mb="0" cb="0"/><line nr="647" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="6" mb="0" cb="0"/><line nr="670" mi="2" ci="0" mb="0" cb="0"/><line nr="681" mi="0" ci="6" mb="0" cb="0"/><line nr="692" mi="0" ci="6" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="0"/><line nr="724" mi="0" ci="2" mb="0" cb="0"/><line nr="743" mi="0" ci="6" mb="0" cb="0"/><line nr="753" mi="0" ci="2" mb="0" cb="0"/><line nr="762" mi="0" ci="6" mb="0" cb="0"/><line nr="772" mi="0" ci="2" mb="0" cb="0"/><line nr="782" mi="0" ci="2" mb="0" cb="0"/><line nr="793" mi="0" ci="7" mb="0" cb="0"/><line nr="804" mi="0" ci="7" mb="0" cb="0"/><line nr="821" mi="0" ci="2" mb="0" cb="0"/><line nr="822" mi="0" ci="6" mb="0" cb="0"/><line nr="839" mi="0" ci="2" mb="0" cb="0"/><line nr="840" mi="0" ci="6" mb="0" cb="0"/><line nr="862" mi="0" ci="2" mb="0" cb="0"/><line nr="863" mi="0" ci="5" mb="0" cb="0"/><line nr="864" mi="0" ci="2" mb="1" cb="1"/><line nr="865" mi="0" ci="4" mb="0" cb="0"/><line nr="867" mi="3" ci="0" mb="0" cb="0"/><line nr="895" mi="0" ci="2" mb="0" cb="0"/><line nr="896" mi="0" ci="5" mb="0" cb="0"/><line nr="897" mi="0" ci="2" mb="0" cb="2"/><line nr="898" mi="0" ci="4" mb="0" cb="0"/><line nr="900" mi="0" ci="3" mb="0" cb="0"/><line nr="911" mi="0" ci="2" mb="0" cb="0"/><line nr="920" mi="0" ci="11" mb="0" cb="0"/><line nr="929" mi="0" ci="2" mb="0" cb="0"/><line nr="930" mi="0" ci="13" mb="0" cb="0"/><line nr="939" mi="0" ci="2" mb="0" cb="0"/><line nr="940" mi="0" ci="7" mb="0" cb="0"/><line nr="959" mi="0" ci="2" mb="0" cb="0"/><line nr="977" mi="0" ci="2" mb="0" cb="0"/><line nr="997" mi="0" ci="2" mb="0" cb="0"/><line nr="1006" mi="0" ci="2" mb="0" cb="0"/><line nr="1007" mi="0" ci="16" mb="0" cb="2"/><line nr="1008" mi="0" ci="3" mb="0" cb="2"/><line nr="1009" mi="0" ci="2" mb="0" cb="0"/><line nr="1012" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="459"/><counter type="BRANCH" missed="1" covered="57"/><counter type="LINE" missed="4" covered="88"/><counter type="COMPLEXITY" missed="3" covered="142"/><counter type="METHOD" missed="2" covered="114"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntCheckHelper1.java"><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="2"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="2"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="12" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="13" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="13" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="9" mb="0" cb="0"/><line nr="152" mi="0" ci="12" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="2"/><line nr="166" mi="0" ci="9" mb="0" cb="0"/><line nr="168" mi="0" ci="12" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="11" mb="0" cb="0"/><line nr="185" mi="0" ci="10" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="2"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="2"/><line nr="200" mi="0" ci="11" mb="0" cb="0"/><line nr="202" mi="0" ci="10" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="13" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="2"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="13" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="2"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="538"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="114"/><counter type="COMPLEXITY" missed="0" covered="38"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Check.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="2"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="2"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="10" mb="0" cb="4"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="11" mb="0" cb="4"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="2"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="9" mb="0" cb="6"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="2"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="11" mb="0" cb="6"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="2"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="8" mb="0" cb="4"/><line nr="372" mi="0" ci="3" mb="0" cb="2"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="12" mb="2" cb="4"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="1" cb="3"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="469" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="244"/><counter type="BRANCH" missed="3" covered="45"/><counter type="LINE" missed="3" covered="49"/><counter type="COMPLEXITY" missed="5" covered="42"/><counter type="METHOD" missed="2" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectCheckHelper1.java"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="14" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="14" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="2"/><line nr="161" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="12" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="2"/><line nr="178" mi="0" ci="9" mb="0" cb="0"/><line nr="180" mi="0" ci="12" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="2"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="2"/><line nr="196" mi="0" ci="11" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="2"/><line nr="214" mi="0" ci="11" mb="0" cb="0"/><line nr="216" mi="0" ci="10" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="14" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="2"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="14" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="8" mb="0" cb="2"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="534"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="110"/><counter type="COMPLEXITY" missed="0" covered="38"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectCheck.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="14" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="2"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="14" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="14" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="2"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="14" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="6" mb="0" cb="2"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="2"/><line nr="256" mi="0" ci="11" mb="0" cb="0"/><line nr="258" mi="0" ci="14" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="2"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="2"/><line nr="281" mi="0" ci="11" mb="0" cb="0"/><line nr="283" mi="0" ci="14" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="2"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="14" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="1" cb="1"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="14" mb="0" cb="0"/><line nr="341" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="6" mb="1" cb="1"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="7" ci="0" mb="0" cb="0"/><line nr="409" mi="0" ci="6" mb="0" cb="0"/><line nr="430" mi="0" ci="6" mb="0" cb="0"/><line nr="456" mi="0" ci="7" mb="0" cb="0"/><line nr="480" mi="0" ci="7" mb="0" cb="0"/><line nr="503" mi="0" ci="8" mb="0" cb="0"/><line nr="526" mi="0" ci="8" mb="0" cb="0"/><line nr="548" mi="0" ci="7" mb="0" cb="0"/><line nr="570" mi="0" ci="8" mb="0" cb="0"/><line nr="596" mi="0" ci="7" mb="0" cb="0"/><line nr="622" mi="0" ci="7" mb="0" cb="0"/><line nr="647" mi="0" ci="8" mb="0" cb="0"/><line nr="674" mi="0" ci="8" mb="0" cb="0"/><line nr="704" mi="0" ci="9" mb="0" cb="0"/><line nr="738" mi="0" ci="9" mb="0" cb="0"/><line nr="768" mi="0" ci="8" mb="0" cb="0"/><line nr="794" mi="0" ci="6" mb="0" cb="0"/><line nr="795" mi="0" ci="3" mb="0" cb="0"/><line nr="817" mi="0" ci="6" mb="0" cb="0"/><line nr="837" mi="0" ci="6" mb="0" cb="0"/><line nr="859" mi="0" ci="7" mb="0" cb="0"/><line nr="882" mi="0" ci="7" mb="0" cb="0"/><line nr="906" mi="0" ci="8" mb="0" cb="0"/><line nr="930" mi="0" ci="8" mb="0" cb="0"/><line nr="952" mi="0" ci="7" mb="0" cb="0"/><line nr="974" mi="0" ci="8" mb="0" cb="0"/><line nr="1007" mi="0" ci="7" mb="0" cb="0"/><line nr="1040" mi="0" ci="7" mb="0" cb="0"/><line nr="1075" mi="0" ci="8" mb="0" cb="0"/><line nr="1110" mi="0" ci="8" mb="0" cb="0"/><line nr="1147" mi="0" ci="9" mb="0" cb="0"/><line nr="1188" mi="0" ci="9" mb="0" cb="0"/><line nr="1219" mi="0" ci="8" mb="0" cb="0"/><line nr="1254" mi="0" ci="6" mb="0" cb="0"/><line nr="1255" mi="0" ci="3" mb="0" cb="0"/><line nr="1288" mi="0" ci="7" mb="0" cb="0"/><line nr="1320" mi="0" ci="7" mb="0" cb="0"/><line nr="1356" mi="0" ci="8" mb="0" cb="0"/><line nr="1390" mi="0" ci="8" mb="0" cb="0"/><line nr="1426" mi="0" ci="9" mb="0" cb="0"/><line nr="1466" mi="0" ci="9" mb="0" cb="0"/><line nr="1505" mi="0" ci="8" mb="0" cb="0"/><line nr="1540" mi="0" ci="6" mb="0" cb="0"/><line nr="1541" mi="0" ci="3" mb="0" cb="0"/><line nr="1554" mi="0" ci="8" mb="0" cb="0"/><line nr="1566" mi="0" ci="8" mb="0" cb="0"/><line nr="1579" mi="0" ci="8" mb="0" cb="0"/><line nr="1593" mi="0" ci="8" mb="0" cb="0"/><line nr="1597" mi="0" ci="3" mb="0" cb="2"/><line nr="1598" mi="0" ci="2" mb="0" cb="0"/><line nr="1600" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="643"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="3" covered="108"/><counter type="COMPLEXITY" missed="3" covered="73"/><counter type="METHOD" missed="1" covered="60"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntCheckHelper2.java"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="2"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="2"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="96" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="1" cb="1"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="1" cb="1"/><line nr="170" mi="0" ci="11" mb="0" cb="0"/><line nr="172" mi="10" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="2"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="1" cb="1"/><line nr="188" mi="0" ci="11" mb="0" cb="0"/><line nr="190" mi="10" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="2"/><line nr="203" mi="0" ci="14" mb="0" cb="0"/><line nr="205" mi="0" ci="10" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="2"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="2"/><line nr="224" mi="0" ci="13" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="2"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="11" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="2"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="11" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="0" cb="2"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="534"/><counter type="BRANCH" missed="3" covered="41"/><counter type="LINE" missed="5" covered="123"/><counter type="COMPLEXITY" missed="3" covered="35"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="105" covered="5108"/><counter type="BRANCH" missed="10" covered="392"/><counter type="LINE" missed="23" covered="1011"/><counter type="COMPLEXITY" missed="23" covered="600"/><counter type="METHOD" missed="13" covered="409"/><counter type="CLASS" missed="1" covered="11"/></package><package name="org/klojang/check/relation"><class name="org/klojang/check/relation/Compose" sourcefilename="Compose.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valid" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validInt" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalid" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalidInt" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validWhen" desc="(Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validIntWhen" desc="(I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalidWhen" desc="(Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalidIntWhen" desc="(I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validIf" desc="(Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="153"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validIntIf" desc="(Ljava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="168"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validIf" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validIntIf" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="210"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validIntIf" desc="(Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="226"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validIntIf$10" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="226"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validIntIf$9" desc="(Lorg/klojang/check/relation/IntObjRelation;Ljava/lang/Object;I)Z" line="210"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validIf$8" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="192"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$invalidIntWhen$7" desc="(II)Z" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$invalidWhen$6" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="118"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validIntWhen$5" desc="(II)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validWhen$4" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$invalidInt$3" desc="(I)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$invalid$2" desc="(Ljava/lang/Object;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validInt$1" desc="(I)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$valid$0" desc="(Ljava/lang/Object;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="93"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="1" covered="27"/><counter type="METHOD" missed="1" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/relation/ObjIntRelation" sourcefilename="ObjIntRelation.java"><method name="converse" desc="()Lorg/klojang/check/relation/IntObjRelation;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negate" desc="()Lorg/klojang/check/relation/ObjIntRelation;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$negate$1" desc="(Ljava/lang/Object;I)Z" line="45"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$converse$0" desc="(ILjava/lang/Object;)Z" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/klojang/check/relation/ComposableIntPredicate" sourcefilename="ComposableIntPredicate.java"><method name="negated" desc="()Lorg/klojang/check/relation/ComposableIntPredicate;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElse" desc="(Ljava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElse" desc="(Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Ljava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Lorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(ILjava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="127"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="145"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(ILorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="161"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="176"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(ILjava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="209"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="229"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="247"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Z)Lorg/klojang/check/relation/ComposableIntPredicate;" line="261"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orEval" desc="(Ljava/util/function/Supplier;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="276"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andAlso" desc="(Ljava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="293"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andAlso" desc="(Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="307"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Z)Lorg/klojang/check/relation/ComposableIntPredicate;" line="320"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andEval" desc="(Ljava/util/function/Supplier;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="335"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Ljava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="347"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Lorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="362"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Lorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="378"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="393"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(ILjava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="406"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="424"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(ILorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="440"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="455"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(ILjava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="469"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="488"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(ILorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="505"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;)Lorg/klojang/check/relation/ComposableIntPredicate;" line="525"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[I)Lorg/klojang/check/relation/ComposableIntPredicate;" line="543"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meFirst" desc="(I)Z" line="548"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$33" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[II)Z" line="543"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$32" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;I)Z" line="525"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$31" desc="(Lorg/klojang/check/relation/IntRelation;III)Z" line="505"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$30" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;I)Z" line="488"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$29" desc="(Ljava/util/function/IntPredicate;II)Z" line="469"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$28" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;I)Z" line="455"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$27" desc="(Lorg/klojang/check/relation/IntRelation;III)Z" line="440"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$26" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;I)Z" line="424"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$25" desc="(Ljava/util/function/IntPredicate;II)Z" line="406"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$24" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;I)Z" line="393"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$23" desc="(Lorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[II)Z" line="378"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$22" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="362"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$21" desc="(Ljava/util/function/IntPredicate;I)Z" line="347"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andEval$20" desc="(Ljava/util/function/Supplier;I)Z" line="335"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$19" desc="(ZI)Z" line="320"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andAlso$18" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="307"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andAlso$17" desc="(Ljava/util/function/IntPredicate;I)Z" line="293"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orEval$16" desc="(Ljava/util/function/Supplier;I)Z" line="276"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$15" desc="(ZI)Z" line="261"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$14" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[II)Z" line="247"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$13" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;I)Z" line="229"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$12" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;I)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$11" desc="(Ljava/util/function/IntPredicate;II)Z" line="190"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$10" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;I)Z" line="176"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$9" desc="(Lorg/klojang/check/relation/IntRelation;III)Z" line="161"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$8" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;I)Z" line="145"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$7" desc="(Ljava/util/function/IntPredicate;II)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$6" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;I)Z" line="114"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$5" desc="(Lorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[II)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$4" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="83"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$3" desc="(Ljava/util/function/IntPredicate;I)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orElse$2" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orElse$1" desc="(Ljava/util/function/IntPredicate;I)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$negated$0" desc="(I)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="605"/><counter type="BRANCH" missed="5" covered="129"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="5" covered="131"/><counter type="METHOD" missed="0" covered="69"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/relation/Relation" sourcefilename="Relation.java"><method name="converse" desc="()Lorg/klojang/check/relation/Relation;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negate" desc="()Lorg/klojang/check/relation/Relation;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$negate$1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$converse$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="24"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/relation/Private" sourcefilename="Private.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testAgainstArray" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;)Z" line="15"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testAgainstArray" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[I)Z" line="26"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testAgainstArray$5" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testAgainstArray$4" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testAgainstArray$3" desc="(Lorg/klojang/check/relation/IntRelation;II)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testAgainstArray$2" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testAgainstArray$1" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testAgainstArray$0" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="82"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/relation/IntRelation" sourcefilename="IntRelation.java"><method name="converse" desc="()Lorg/klojang/check/relation/IntRelation;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lorg/klojang/check/relation/IntRelation;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$negate$1" desc="(II)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$converse$0" desc="(II)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/relation/Quantifier" sourcefilename="Quantifier.java"><method name="allOf" desc="()Lorg/klojang/check/relation/Quantifier;" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="anyOf" desc="()Lorg/klojang/check/relation/Quantifier;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noneOf" desc="()Lorg/klojang/check/relation/Quantifier;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/relation/ComposablePredicate" sourcefilename="ComposablePredicate.java"><method name="negated" desc="()Lorg/klojang/check/relation/ComposablePredicate;" line="144"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orElse" desc="(Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElse" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="181"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="196"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="217"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="238"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="260"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(ILjava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="280"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="301"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orThat" desc="(ILorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposablePredicate;" line="320"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="342"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orNot" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="364"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="387"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[I)Lorg/klojang/check/relation/ComposablePredicate;" line="408"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Z)Lorg/klojang/check/relation/ComposablePredicate;" line="425"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orEval" desc="(Ljava/util/function/Supplier;)Lorg/klojang/check/relation/ComposablePredicate;" line="443"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andAlso" desc="(Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="463"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andAlso" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="481"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Z)Lorg/klojang/check/relation/ComposablePredicate;" line="497"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andEval" desc="(Ljava/util/function/Supplier;)Lorg/klojang/check/relation/ComposablePredicate;" line="515"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="530"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="548"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="569"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="591"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(ILjava/util/function/IntPredicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="611"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="632"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andThat" desc="(ILorg/klojang/check/relation/IntRelation;I)Lorg/klojang/check/relation/ComposablePredicate;" line="651"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Ljava/lang/Object;Ljava/util/function/Predicate;)Lorg/klojang/check/relation/ComposablePredicate;" line="673"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andNot" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="695"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;)Lorg/klojang/check/relation/ComposablePredicate;" line="718"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[I)Lorg/klojang/check/relation/ComposablePredicate;" line="739"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meFirst" desc="(Ljava/lang/Object;)Z" line="744"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$30" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[ILjava/lang/Object;)Z" line="739"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$29" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;Ljava/lang/Object;)Z" line="718"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$28" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="695"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$27" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;Ljava/lang/Object;)Z" line="673"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$26" desc="(Lorg/klojang/check/relation/IntRelation;IILjava/lang/Object;)Z" line="651"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$25" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="632"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$24" desc="(Ljava/util/function/IntPredicate;ILjava/lang/Object;)Z" line="611"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThat$23" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;Ljava/lang/Object;)Z" line="591"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$22" desc="(Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;Ljava/lang/Object;)Z" line="569"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$21" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="548"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andNot$20" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;)Z" line="530"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andEval$19" desc="(Ljava/util/function/Supplier;Ljava/lang/Object;)Z" line="515"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$18" desc="(ZLjava/lang/Object;)Z" line="497"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andAlso$17" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="481"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andAlso$16" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;)Z" line="463"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orEval$15" desc="(Ljava/util/function/Supplier;Ljava/lang/Object;)Z" line="443"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$14" desc="(ZLjava/lang/Object;)Z" line="425"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$13" desc="(ILorg/klojang/check/relation/IntRelation;Lorg/klojang/check/relation/Quantifier;[ILjava/lang/Object;)Z" line="408"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$12" desc="(Ljava/lang/Object;Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;Ljava/lang/Object;)Z" line="387"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$11" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="364"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$10" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;Ljava/lang/Object;)Z" line="342"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$9" desc="(Lorg/klojang/check/relation/IntRelation;IILjava/lang/Object;)Z" line="320"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$8" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="301"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$7" desc="(Ljava/util/function/IntPredicate;ILjava/lang/Object;)Z" line="280"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orThat$6" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;Ljava/lang/Object;)Z" line="260"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$or$5" desc="(Lorg/klojang/check/relation/Relation;Lorg/klojang/check/relation/Quantifier;[Ljava/lang/Object;Ljava/lang/Object;)Z" line="238"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$4" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="217"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orNot$3" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;)Z" line="196"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orElse$2" desc="(Lorg/klojang/check/relation/Relation;Ljava/lang/Object;Ljava/lang/Object;)Z" line="181"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$orElse$1" desc="(Ljava/util/function/Predicate;Ljava/lang/Object;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$negated$0" desc="(Ljava/lang/Object;)Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="540"/><counter type="BRANCH" missed="7" covered="115"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="8" covered="116"/><counter type="METHOD" missed="2" covered="61"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/relation/IntObjRelation" sourcefilename="IntObjRelation.java"><method name="converse" desc="()Lorg/klojang/check/relation/ObjIntRelation;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negate" desc="()Lorg/klojang/check/relation/IntObjRelation;" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$negate$1" desc="(ILjava/lang/Object;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$converse$0" desc="(Ljava/lang/Object;I)Z" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Quantifier.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntRelation.java"><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComposablePredicate.java"><line nr="144" mi="11" ci="0" mb="2" cb="0"/><line nr="158" mi="0" ci="16" mb="0" cb="4"/><line nr="181" mi="0" ci="18" mb="0" cb="4"/><line nr="196" mi="0" ci="16" mb="0" cb="4"/><line nr="217" mi="1" ci="17" mb="1" cb="3"/><line nr="238" mi="0" ci="15" mb="0" cb="2"/><line nr="239" mi="0" ci="5" mb="0" cb="2"/><line nr="260" mi="0" ci="17" mb="0" cb="4"/><line nr="280" mi="0" ci="17" mb="0" cb="4"/><line nr="301" mi="0" ci="19" mb="0" cb="4"/><line nr="320" mi="0" ci="19" mb="0" cb="4"/><line nr="342" mi="0" ci="17" mb="1" cb="3"/><line nr="364" mi="0" ci="19" mb="0" cb="4"/><line nr="387" mi="0" ci="16" mb="0" cb="2"/><line nr="388" mi="0" ci="5" mb="0" cb="2"/><line nr="408" mi="0" ci="16" mb="0" cb="2"/><line nr="409" mi="0" ci="5" mb="0" cb="2"/><line nr="425" mi="0" ci="14" mb="0" cb="4"/><line nr="443" mi="0" ci="17" mb="0" cb="4"/><line nr="463" mi="1" ci="15" mb="2" cb="2"/><line nr="481" mi="0" ci="18" mb="0" cb="4"/><line nr="497" mi="0" ci="14" mb="0" cb="4"/><line nr="515" mi="0" ci="17" mb="0" cb="4"/><line nr="530" mi="0" ci="16" mb="0" cb="4"/><line nr="548" mi="0" ci="18" mb="0" cb="4"/><line nr="569" mi="0" ci="15" mb="0" cb="2"/><line nr="570" mi="0" ci="5" mb="0" cb="2"/><line nr="591" mi="0" ci="17" mb="0" cb="4"/><line nr="611" mi="0" ci="17" mb="0" cb="4"/><line nr="632" mi="0" ci="19" mb="1" cb="3"/><line nr="651" mi="0" ci="19" mb="0" cb="4"/><line nr="673" mi="0" ci="17" mb="0" cb="4"/><line nr="695" mi="0" ci="19" mb="0" cb="4"/><line nr="718" mi="0" ci="16" mb="0" cb="2"/><line nr="719" mi="0" ci="5" mb="0" cb="2"/><line nr="739" mi="0" ci="16" mb="0" cb="2"/><line nr="740" mi="0" ci="5" mb="0" cb="2"/><line nr="744" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="540"/><counter type="BRANCH" missed="7" covered="115"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="8" covered="116"/><counter type="METHOD" missed="2" covered="61"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntObjRelation.java"><line nr="25" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="12" mb="0" cb="2"/><counter type="INSTRUCTION" missed="8" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Private.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="6" mb="1" cb="3"/><line nr="16" mi="0" ci="12" mb="0" cb="0"/><line nr="17" mi="0" ci="12" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="26" mi="4" ci="6" mb="1" cb="3"/><line nr="27" mi="0" ci="12" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="82"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjIntRelation.java"><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="12" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Compose.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="2"/><line nr="118" mi="0" ci="11" mb="0" cb="2"/><line nr="130" mi="0" ci="10" mb="0" cb="2"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="0" ci="9" mb="0" cb="0"/><line nr="226" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="93"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="1" covered="27"/><counter type="METHOD" missed="1" covered="24"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComposableIntPredicate.java"><line nr="28" mi="0" ci="11" mb="0" cb="2"/><line nr="39" mi="0" ci="16" mb="0" cb="4"/><line nr="57" mi="0" ci="18" mb="0" cb="4"/><line nr="69" mi="0" ci="16" mb="0" cb="4"/><line nr="83" mi="1" ci="17" mb="1" cb="3"/><line nr="99" mi="0" ci="15" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="17" mb="0" cb="4"/><line nr="127" mi="0" ci="17" mb="0" cb="4"/><line nr="145" mi="0" ci="19" mb="0" cb="4"/><line nr="161" mi="0" ci="19" mb="0" cb="4"/><line nr="176" mi="0" ci="17" mb="1" cb="3"/><line nr="190" mi="0" ci="17" mb="1" cb="3"/><line nr="209" mi="0" ci="19" mb="0" cb="4"/><line nr="229" mi="0" ci="16" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="2"/><line nr="247" mi="0" ci="16" mb="0" cb="2"/><line nr="248" mi="0" ci="5" mb="0" cb="2"/><line nr="261" mi="0" ci="14" mb="1" cb="3"/><line nr="276" mi="0" ci="17" mb="0" cb="4"/><line nr="293" mi="0" ci="16" mb="0" cb="4"/><line nr="307" mi="0" ci="18" mb="0" cb="4"/><line nr="320" mi="0" ci="14" mb="0" cb="4"/><line nr="335" mi="0" ci="17" mb="0" cb="4"/><line nr="347" mi="0" ci="16" mb="0" cb="4"/><line nr="362" mi="0" ci="18" mb="1" cb="3"/><line nr="378" mi="0" ci="15" mb="0" cb="2"/><line nr="379" mi="0" ci="5" mb="0" cb="2"/><line nr="393" mi="0" ci="17" mb="0" cb="4"/><line nr="406" mi="0" ci="17" mb="0" cb="4"/><line nr="424" mi="0" ci="19" mb="0" cb="4"/><line nr="440" mi="0" ci="19" mb="0" cb="4"/><line nr="455" mi="0" ci="17" mb="0" cb="4"/><line nr="469" mi="0" ci="17" mb="0" cb="4"/><line nr="488" mi="0" ci="19" mb="0" cb="4"/><line nr="505" mi="0" ci="19" mb="0" cb="4"/><line nr="525" mi="0" ci="16" mb="0" cb="2"/><line nr="526" mi="0" ci="5" mb="0" cb="2"/><line nr="543" mi="0" ci="16" mb="0" cb="2"/><line nr="544" mi="0" ci="5" mb="0" cb="2"/><line nr="548" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="605"/><counter type="BRANCH" missed="5" covered="129"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="5" covered="131"/><counter type="METHOD" missed="0" covered="69"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Relation.java"><line nr="24" mi="8" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="2"/><counter type="INSTRUCTION" missed="8" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="67" covered="1391"/><counter type="BRANCH" missed="16" covered="262"/><counter type="LINE" missed="8" covered="110"/><counter type="COMPLEXITY" missed="26" covered="301"/><counter type="METHOD" missed="12" covered="174"/><counter type="CLASS" missed="1" covered="8"/></package><package name="org/klojang/check/aux"><class name="org/klojang/check/aux/Emptyable" sourcefilename="Emptyable.java"><method name="isDeepNotEmpty" desc="()Z" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/klojang/check/aux/Result" sourcefilename="Result.java"><method name="of" desc="(Ljava/lang/Object;)Lorg/klojang/check/aux/Result;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notAvailable" desc="()Lorg/klojang/check/aux/Result;" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAvailable" desc="()Z" line="88"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnavailable" desc="()Z" line="99"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifAvailable" desc="(Lorg/klojang/check/fallible/FallibleConsumer;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElse" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Lorg/klojang/check/aux/Result;)Lorg/klojang/check/aux/Result;" line="139"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="151"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeepNotEmpty" desc="()Z" line="162"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="174"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/aux/DuplicateValueException" sourcefilename="DuplicateValueException.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/check/aux/DuplicateValueException$Usage;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/check/aux/DuplicateValueException$Usage;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/klojang/check/aux/DuplicateValueException$Usage;Ljava/util/Collection;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessage" desc="(Lorg/klojang/check/aux/DuplicateValueException$Usage;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessage" desc="(Lorg/klojang/check/aux/DuplicateValueException$Usage;Ljava/lang/Object;)Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessage" desc="(Lorg/klojang/check/aux/DuplicateValueException$Usage;Ljava/util/Collection;)Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/klojang/check/aux/DuplicateValueException$Usage" sourcefilename="DuplicateValueException.java"><method name="description" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Emptyable.java"><line nr="35" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Result.java"><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="2"/><line nr="151" mi="0" ci="12" mb="0" cb="4"/><line nr="162" mi="0" ci="12" mb="0" cb="4"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="4"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="15" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DuplicateValueException.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="231"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="1" covered="51"/><counter type="COMPLEXITY" missed="2" covered="39"/><counter type="METHOD" missed="1" covered="25"/><counter type="CLASS" missed="1" covered="3"/></package><package name="org/klojang/check/fallible"><class name="org/klojang/check/fallible/FallibleIntFunction" sourcefilename="FallibleIntFunction.java"/><class name="org/klojang/check/fallible/FallibleBiFunction" sourcefilename="FallibleBiFunction.java"/><class name="org/klojang/check/fallible/FallibleIntConsumer" sourcefilename="FallibleIntConsumer.java"/><class name="org/klojang/check/fallible/FallibleIntUnaryOperator" sourcefilename="FallibleIntUnaryOperator.java"/><class name="org/klojang/check/fallible/FallibleToIntFunction" sourcefilename="FallibleToIntFunction.java"/><class name="org/klojang/check/fallible/FallibleIntSupplier" sourcefilename="FallibleIntSupplier.java"/><class name="org/klojang/check/fallible/FallibleSupplier" sourcefilename="FallibleSupplier.java"/><class name="org/klojang/check/fallible/FallibleConsumer" sourcefilename="FallibleConsumer.java"/><class name="org/klojang/check/fallible/FallibleFunction" sourcefilename="FallibleFunction.java"/><sourcefile name="FallibleSupplier.java"/><sourcefile name="FallibleIntSupplier.java"/><sourcefile name="FallibleConsumer.java"/><sourcefile name="FallibleIntFunction.java"/><sourcefile name="FallibleIntUnaryOperator.java"/><sourcefile name="FallibleFunction.java"/><sourcefile name="FallibleToIntFunction.java"/><sourcefile name="FallibleBiFunction.java"/><sourcefile name="FallibleIntConsumer.java"/></package><counter type="INSTRUCTION" missed="179" covered="6730"/><counter type="BRANCH" missed="28" covered="682"/><counter type="LINE" missed="32" covered="1172"/><counter type="COMPLEXITY" missed="51" covered="940"/><counter type="METHOD" missed="26" covered="608"/><counter type="CLASS" missed="3" covered="22"/></report>