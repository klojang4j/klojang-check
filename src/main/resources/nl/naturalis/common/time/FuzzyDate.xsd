<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema targetNamespace="http://data.klojang.org/fuzzy-date"
           elementFormDefault="qualified" attributeFormDefault="unqualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:self="http://data.klojang.org/fuzzy-date"
           version="0.1">
    <xs:element name="FuzzyDate">
        <xs:complexType>
            <xs:all>
                <xs:element name="ParseDefaults" type="self:Defaults" minOccurs="0"/>
                <xs:element name="Instant" type="self:ParseInto" minOccurs="0"/>
                <xs:element name="OffsetDateTime" type="self:ParseInto" minOccurs="0"/>
                <xs:element name="LocalDateTime" type="self:ParseInto" minOccurs="0"/>
                <xs:element name="LocalDate" type="self:ParseInto" minOccurs="0"/>
                <xs:element name="YearMonth" type="self:ParseInto" minOccurs="0"/>
                <xs:element name="Year" type="self:ParseInto" minOccurs="0"/>
            </xs:all>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="ParseInto">
        <xs:all>
            <xs:element name="try" type="self:ParseAttempt" minOccurs="0" maxOccurs="unbounded"/>
        </xs:all>
    </xs:complexType>

    <xs:complexType name="ParseAttempt">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attributeGroup ref="self:TryAttributes"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- Allow attributes on the <try> element. All optional -->
    <xs:attributeGroup name="TryAttributes">
        <!--
            Whether the <try> element's content is the name of a public static
            final DateTimeFormatter field (true) or a date/time pattern string
            (false). If you want to reference the public static final
            DateTimeFormatter fields of the DateTimeFormatter itself (e.g.
            ISO_LOCAL_DATE), the name of the field itself is enough.
            DateTimeFormatter constants defined elsewhere must be specified
            using their fully-qualified name (e.g.
            java.time.format.DateTimeFormatter.ISO_LOCAL_DATE).
         -->
        <xs:attribute name="predefined" type="xs:boolean" default="false"/>
        <!-- The fully-qualified name of a DateStringFilter implementation -->
        <xs:attribute name="filter" type="xs:string"/>
        <!--
            Whether to ignore case while parsing date strings. This attribute
            must be  absent when predefined="true", because case sensitivity is
            fixed for predefined DateTimeFormatter instances.
        -->
        <xs:attribute name="caseSensitive" type="xs:boolean"/>
        <!-- Sets the java.time.format.ResolverStyle of the date parser -->
        <xs:attribute name="resolverStyle" type="self:ResolverStyle"/>
        <!--
            A semicolon-separated string of locales. Only simply formatted locale
            strings like "en_US" are supported.
        -->
        <xs:attribute name="locales" type="xs:string"/>
    </xs:attributeGroup>

    <xs:complexType name="Defaults">
        <xs:all>
            <!-- Whether to ignore case while parsing date strings -->
            <xs:element name="caseSensitive" minOccurs="0" type="xs:boolean"/>
            <!-- Sets the java.time.format.ResolverStyle of the date parser -->
            <xs:element name="resolverStyle" minOccurs="0" type="self:ResolverStyle"/>
            <!-- A semicolon-separated string of locales -->
            <xs:element name="locales" minOccurs="0" type="xs:string"/>
            <!-- The fully-qualified name of a DateStringFilter implementation -->
            <xs:element name="filter" minOccurs="0" type="xs:string"/>
        </xs:all>
    </xs:complexType>

    <xs:simpleType name="ResolverStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="LENIENT"/>
            <xs:enumeration value="SMART"/>
            <xs:enumeration value="STRICT"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>